{"sklearn.linear_model.ElasticNetCV": {"l1_ratio": [0.0, 0.05, 0.1, 0.15000000000000002, 0.2, 0.25, 0.30000000000000004, 0.35000000000000003, 0.4, 0.45, 0.5, 0.55, 0.6000000000000001, 0.65, 0.7000000000000001, 0.75, 0.8, 0.8500000000000001, 0.9, 0.9500000000000001, 1.0], "tol": [1e-05, 0.0001, 0.001, 0.01, 0.1]}, "sklearn.ensemble.ExtraTreesRegressor": {"n_estimators": [100], "max_features": [0.05, 0.1, 0.15000000000000002, 0.2, 0.25, 0.3, 0.35000000000000003, 0.4, 0.45, 0.5, 0.55, 0.6000000000000001, 0.6500000000000001, 0.7000000000000001, 0.7500000000000001, 0.8, 0.8500000000000001, 0.9000000000000001, 0.9500000000000001, 1.0], "min_samples_split": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "min_samples_leaf": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "bootstrap": [true, false]}, "sklearn.ensemble.GradientBoostingRegressor": {"n_estimators": [100], "loss": ["ls", "lad", "huber", "quantile"], "learning_rate": [0.001, 0.01, 0.1, 0.5, 1.0], "max_depth": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "min_samples_split": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "min_samples_leaf": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "subsample": [0.05, 0.1, 0.15000000000000002, 0.2, 0.25, 0.3, 0.35000000000000003, 0.4, 0.45, 0.5, 0.55, 0.6000000000000001, 0.6500000000000001, 0.7000000000000001, 0.7500000000000001, 0.8, 0.8500000000000001, 0.9000000000000001, 0.9500000000000001, 1.0], "max_features": [0.05, 0.1, 0.15000000000000002, 0.2, 0.25, 0.3, 0.35000000000000003, 0.4, 0.45, 0.5, 0.55, 0.6000000000000001, 0.6500000000000001, 0.7000000000000001, 0.7500000000000001, 0.8, 0.8500000000000001, 0.9000000000000001, 0.9500000000000001, 1.0], "alpha": [0.75, 0.8, 0.85, 0.9, 0.95, 0.99]}, "sklearn.ensemble.AdaBoostRegressor": {"n_estimators": [100], "learning_rate": [0.001, 0.01, 0.1, 0.5, 1.0], "loss": ["linear", "square", "exponential"]}, "sklearn.tree.DecisionTreeRegressor": {"max_depth": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "min_samples_split": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "min_samples_leaf": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]}, "sklearn.neighbors.KNeighborsRegressor": {"n_neighbors": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "weights": ["uniform", "distance"], "p": [1, 2]}, "sklearn.linear_model.LassoLarsCV": {"normalize": [true, false]}, "sklearn.svm.LinearSVR": {"loss": ["epsilon_insensitive", "squared_epsilon_insensitive"], "dual": [true, false], "tol": [1e-05, 0.0001, 0.001, 0.01, 0.1], "C": [0.0001, 0.001, 0.01, 0.1, 0.5, 1.0, 5.0, 10.0, 15.0, 20.0, 25.0], "epsilon": [0.0001, 0.001, 0.01, 0.1, 1.0]}, "sklearn.ensemble.RandomForestRegressor": {"n_estimators": [100, 200, 300], "max_features": [0.05, 0.1, 0.15000000000000002, 0.2, 0.25, 0.3, 0.35000000000000003, 0.4, 0.45, 0.5, 0.55, 0.6000000000000001, 0.6500000000000001, 0.7000000000000001, 0.7500000000000001, 0.8, 0.8500000000000001, 0.9000000000000001, 0.9500000000000001, 1.0], "min_samples_split": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "min_samples_leaf": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "bootstrap": [true, false]}, "xgboost.XGBRegressor": {"n_estimators": [100], "max_depth": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "learning_rate": [0.001, 0.01, 0.1, 0.5, 1.0], "subsample": [0.05, 0.1, 0.15000000000000002, 0.2, 0.25, 0.3, 0.35000000000000003, 0.4, 0.45, 0.5, 0.55, 0.6000000000000001, 0.6500000000000001, 0.7000000000000001, 0.7500000000000001, 0.8, 0.8500000000000001, 0.9000000000000001, 0.9500000000000001, 1.0], "min_child_weight": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "n_jobs": [1], "verbosity": [0], "objective": ["reg:squarederror"]}, "sklearn.linear_model.SGDRegressor": {"loss": ["squared_loss", "huber", "epsilon_insensitive"], "penalty": ["elasticnet"], "alpha": [0.0, 0.01, 0.001], "learning_rate": ["invscaling", "constant"], "fit_intercept": [true, false], "l1_ratio": [0.25, 0.0, 1.0, 0.75, 0.5], "eta0": [0.1, 1.0, 0.01], "power_t": [0.5, 0.0, 1.0, 0.1, 100.0, 10.0, 50.0]}}